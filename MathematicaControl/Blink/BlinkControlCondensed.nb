(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[      9843,        272]
NotebookOptionsPosition[      9314,        247]
NotebookOutlinePosition[      9669,        263]
CellTagsIndexPosition[      9626,        260]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"<<", "SerialIO`"}], ";", 
  RowBox[{"buttonMessage", "=", "\"\<Connect\>\""}], ";", 
  RowBox[{"port", "=", "\"\<411\>\""}], ";", 
  RowBox[{"text", "=", "\"\<0\>\""}], ";", 
  RowBox[{"refresh", "=", "2"}], ";", 
  RowBox[{"portSelect", "=", 
   RowBox[{"PopupMenu", "[", 
    RowBox[{
     RowBox[{"Dynamic", "[", "port", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<411\>\"", ",", "\"\<641\>\""}], "}"}]}], "]"}]}], ";", 
  RowBox[{"connectButton", "=", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"Button", "[", 
     RowBox[{"buttonMessage", ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"buttonMessage", "\[Equal]", "\"\<Connect\>\""}], "||", 
         RowBox[{"buttonMessage", "\[Equal]", "\"\<Error, try again\>\""}]}], 
        ",", 
        RowBox[{
         RowBox[{"Quiet", "[", 
          RowBox[{
           RowBox[{"Check", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"<<", "SerialIO`"}], ";", 
              RowBox[{"myArduino", "=", 
               RowBox[{"SerialOpen", "[", 
                RowBox[{"StringJoin", "[", 
                 RowBox[{"\"\</dev/tty.usbmodem\>\"", ",", 
                  RowBox[{"ToString", "[", "port", "]"}]}], "]"}], "]"}]}], 
              ";", 
              RowBox[{"SerialSetOptions", "[", 
               RowBox[{"myArduino", ",", 
                RowBox[{"\"\<BaudRate\>\"", "\[Rule]", "9600"}]}], "]"}], ";", 
              RowBox[{"buttonMessage", "=", "\"\<Disconnect\>\""}], ";"}], 
             ",", 
             RowBox[{"buttonMessage", "=", "\"\<Error, try again\>\""}]}], 
            "]"}], ";"}], "]"}], ";"}], ",", 
        RowBox[{
         RowBox[{"refresh", "=", "2"}], ";", 
         RowBox[{"Quiet", "[", 
          RowBox[{"SerialClose", "[", "myArduino", "]"}], "]"}], ";", 
         RowBox[{"buttonMessage", "=", "\"\<Connect\>\""}], ";"}]}], "]"}]}], 
     "]"}], "]"}]}], ";", 
  RowBox[{"readPot", "=", 
   RowBox[{"Dynamic", "[", 
    RowBox[{"Refresh", "[", 
     RowBox[{
      RowBox[{"StringJoin", "[", 
       RowBox[{"\"\<Pot value: \>\"", ",", 
        RowBox[{"ToString", "[", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Check", "[", 
           RowBox[{
            RowBox[{"First", "[", 
             RowBox[{
              RowBox[{"SerialRead", "[", "myArduino", "]"}], "//", 
              "ToCharacterCode"}], "]"}], ",", "\"\<--\>\""}], "]"}], "]"}], 
         "]"}]}], "]"}], ",", 
      RowBox[{"UpdateInterval", "\[Rule]", "refresh"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"OperatorInterface", "=", 
   RowBox[{"Panel", "[", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<USB port:\>\"", ",", "portSelect", ",", 
              RowBox[{"Dynamic", "[", "connectButton", "]"}]}], "}"}], ",", 
            "\"\<   \>\"", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"238", ",", "40"}], "}"}]}]}], "]"}], ",", 
          "SpanFromLeft"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Refresh rate (seconds)\>\"", ",", "SpanFromLeft"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Slider", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "refresh", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{".1", ",", "2", ",", ".1"}], "}"}]}], "]"}], ",", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"PaddedForm", "[", 
            RowBox[{"refresh", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Row", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Button", "[", 
              RowBox[{"\"\<LED on\>\"", ",", 
               RowBox[{"text", "=", "\"\<1\>\""}]}], "]"}], ",", 
             "\"\<   \>\"", ",", 
             RowBox[{"Button", "[", 
              RowBox[{"\"\<LED off\>\"", ",", 
               RowBox[{"text", "=", "\"\<0\>\""}]}], "]"}], ",", 
             "\"\<   \>\"", ",", 
             RowBox[{"Row", "[", 
              RowBox[{
               RowBox[{"{", "readPot", "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"80", ",", "15"}], "}"}]}]}], "]"}]}], "}"}], "]"}], 
          ",", "SpanFromLeft"}], "}"}]}], "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], "]"}]}], ";", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Refresh", "[", 
    RowBox[{
     RowBox[{"Quiet", "[", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"SerialWrite", "[", 
         RowBox[{"myArduino", ",", "text"}], "]"}], ",", "\"\<\>\""}], "]"}], 
      "]"}], ",", 
     RowBox[{"UpdateInterval", "\[Rule]", "refresh"}]}], "]"}], 
   "]"}]}]], "Input",
 CellOpen->False,
 InitializationCell->True,
 CellChangeTimes->{{3.595236843794643*^9, 3.595236868018906*^9}, 
   3.595236970605316*^9, {3.595237154301982*^9, 3.595237154970024*^9}, {
   3.595238024851865*^9, 3.595238025393078*^9}, {3.595240435560116*^9, 
   3.5952404412383833`*^9}, 3.595240471463489*^9, {3.5952430722170277`*^9, 
   3.595243072879252*^9}, {3.595243611781946*^9, 3.595243648643293*^9}, {
   3.595243708908924*^9, 3.595243709171748*^9}, {3.595247135543336*^9, 
   3.5952472146992064`*^9}, {3.595247350721179*^9, 3.5952473549527283`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Quiet[
     Check[
      SerialIO`SerialWrite[$CellContext`myArduino, $CellContext`text], ""]], 
    UpdateInterval -> $CellContext`refresh], StandardForm],
  ImageSizeCache->{0., {0., 6.}}]], "Output",
 CellOpen->False,
 CellChangeTimes->{{3.59525264257233*^9, 3.595252642863336*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["OperatorInterface"], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.595247220858564*^9, 3.5952472216584044`*^9}, {
  3.5952473564159718`*^9, 3.595247363389945*^9}}],

Cell[BoxData[
 PanelBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"USB port:\"",PopupMenuBox[
         Dynamic[$CellContext`port], {
         "411" -> "\"411\"", "641" -> "\"641\""}],DynamicBox[
         ToBoxes[$CellContext`connectButton, StandardForm], 
         ImageSizeCache -> {72., {8.3, 17.7}}]},
       "Row",
       DisplayFunction->(PaneBox[
         RowBox[{
           TemplateSlotSequence[1, "   "]}], ImageSize -> {238, 40}]& ),
       InterpretationFunction->(RowBox[{"Row", "[", 
          RowBox[{
            RowBox[{"{", 
              TemplateSlotSequence[1, ","], "}"}], ",", "\"   \"", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
                RowBox[{"238", ",", "40"}], "}"}]}]}], "]"}]& )], 
      "\[SpanFromLeft]"},
     {"\<\"Refresh rate (seconds)\"\>", "\[SpanFromLeft]"},
     {
      SliderBox[Dynamic[$CellContext`refresh], {0.1, 2, 0.1}], 
      DynamicBox[ToBoxes[
        PaddedForm[$CellContext`refresh, {3, 1}], StandardForm],
       ImageSizeCache->{22., {1., 8.}}]},
     {
      TemplateBox[{
       ButtonBox[
        "\"LED on\"", Appearance -> Automatic, 
         ButtonFunction :> ($CellContext`text = "1"), Evaluator -> Automatic, 
         Method -> "Preemptive"],"\"   \"",ButtonBox[
        "\"LED off\"", Appearance -> Automatic, 
         ButtonFunction :> ($CellContext`text = "0"), Evaluator -> Automatic, 
         Method -> "Preemptive"],"\"   \"",TemplateBox[{
          DynamicBox[
           ToBoxes[
            Refresh[
             StringJoin["Pot value: ", 
              ToString[
               Quiet[
                Check[
                 First[
                  ToCharacterCode[
                   SerialIO`SerialRead[$CellContext`myArduino]]], "--"]]]], 
             UpdateInterval -> $CellContext`refresh], StandardForm], 
           ImageSizeCache -> {62., {0., 8.}}]}, "Row", 
         DisplayFunction -> (PaneBox[#, ImageSize -> {80, 15}]& ), 
         InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", #, "}"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                  RowBox[{"80", ",", "15"}], "}"}]}]}], "]"}]& )]},
       "RowDefault"], "\[SpanFromLeft]"}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]]], "Output",
 CellChangeTimes->{
  3.595247221971239*^9, 3.5952472725986423`*^9, 3.595247364118946*^9, {
   3.595252642746427*^9, 3.5952526429002934`*^9}}]
}, Open  ]]
},
WindowSize->{740, 603},
WindowMargins->{{Automatic, 93}, {Automatic, 0}},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (January 25, \
2013)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 5558, 138, 19, "Input",
 CellOpen->False,
 InitializationCell->True],
Cell[6140, 162, 336, 9, 19, "Output",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[6513, 176, 189, 3, 28, "Input",
 InitializationCell->True],
Cell[6705, 181, 2593, 63, 182, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
